[project]
name = "uv-dynamic-versioning"
dynamic = ["version"]
description = "Dynamic versioning based on VCS tags for uv/hatch project"
readme = "README.md"
requires-python = ">=3.9,<4.0"
license = { file = "LICENSE" }
keywords = ["uv", "hatch"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Framework :: Hatch",
]
dependencies = [
  "dunamai~=1.25",
  "hatchling~=1.26",
  "jinja2~=3.0",
  "tomlkit~=0.13",
]

[project.urls]
Repository = "https://github.com/ninoseki/uv-dynamic-versioning/"
Homepage = "https://github.com/ninoseki/uv-dynamic-versioning/"

[project.scripts]
uv-dynamic-versioning = "uv_dynamic_versioning.cli:main"

[project.entry-points.hatch]
uv-dynamic-versioning = "uv_dynamic_versioning.hooks"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/uv_dynamic_versioning/__init__.py"

[dependency-groups]
dev = [
  "gitpython~=3.1.45",
  "pre-commit~=4.3.0",
  "pytest-pretty~=1.3.0",
  "pytest-randomly~=3.16.0",
  "pytest~=8.4.1",
]

[tool.ruff.lint]
select = [
  "B",   # flake8-bugbear
  "C",   # flake8-comprehensions
  "E",   # pycodestyle errors
  "F",   # pyflakes
  "FA",  # flake8-future-annotations
  "I",   # isort
  "N",   # pep8-naming
  "RET", # flake8-return
  "RUF", # Ruff-specific rules
  "SIM", # flake8-simplify
  "T20", # flake8-print
  "UP",  # pyupgrade
  "W",   # pycodestyle warnings
]
ignore = [
  "E501", # line too long
]
